import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

import java.awt.BorderLayout;
import javax.swing.JTextField;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JCheckBox;
import java.awt.Font;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.HashMap;
import java.awt.event.ActionEvent;
import javax.swing.ScrollPaneConstants;

public class GUI {

	private static JFrame frame;
	private JTextField tFldQuery;

	private static HashMap<String, WordDetails> index;
	private ArrayList<Snippet> snips = new ArrayList<>();

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		index = SearchEngine.invertedIndex;
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					GUI window = new GUI();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public GUI() {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frame = new JFrame();
		frame.setResizable(false);
		frame.setBounds(100, 100, 712, 517);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);

		JPanel panel = new JPanel();
		panel.setBounds(0, 0, 708, 479);
		frame.getContentPane().add(panel);
		panel.setLayout(null);

		tFldQuery = new JTextField();
		tFldQuery.setBounds(40, 29, 460, 32);
		panel.add(tFldQuery);
		tFldQuery.setColumns(10);

		JButton btnSearch = new JButton("Search");
		DefaultListModel model = new DefaultListModel<>();

		JList list = new JList(model);
		list.setBounds(10, 115, 611, 314);

		JButton btnShowSnippets = new JButton("Show Snippets");
		btnShowSnippets.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				String[] argv = {};
				SnippetGUI.main(argv);
				frame.hide();
			}
		});
		btnShowSnippets.setEnabled(false);
		btnShowSnippets.setFont(new Font("Tahoma", Font.PLAIN, 12));
		btnShowSnippets.setBounds(276, 439, 116, 30);
		panel.add(btnShowSnippets);

		btnSearch.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				model.clear();
				System.out.println(tFldQuery.getText());
				Query q = new Query(index, tFldQuery.getText());
				snips = q.getSnippets();
				DefaultListModel<String> modelq = q.getListModel();
				System.out.println(modelq.getSize());
				if (modelq.isEmpty()) {
					JOptionPane.showMessageDialog(null, "Word " + tFldQuery.getText() + "Not Found", "InfoBox: ",
							JOptionPane.INFORMATION_MESSAGE);
				}
				for (int i = 0; i < modelq.getSize(); i++) {
					model.addElement(modelq.getElementAt(i));
				}
				if (!modelq.isEmpty()) {
					btnShowSnippets.setEnabled(true);
				}

			}
		});

		btnSearch.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnSearch.setBounds(510, 29, 85, 32);
		panel.add(btnSearch);

		JCheckBox chckbxNewCheckBox = new JCheckBox("Stemming");
		chckbxNewCheckBox.setFont(new Font("Tahoma", Font.PLAIN, 12));
		chckbxNewCheckBox.setBounds(276, 68, 110, 21);
		panel.add(chckbxNewCheckBox);

		JScrollPane scrollPane = new JScrollPane(list);
		scrollPane.setBounds(10, 95, 688, 334);
		panel.add(scrollPane);

	}

	public static void setFrame() {
		frame.show();
	}
}
